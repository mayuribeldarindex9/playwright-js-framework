name: Playwright Tests & CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: Run Tests & Quality Checks
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        browser: [chromium, firefox, webkit]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix['node-version'] }}
        cache: 'npm'  # Cache node_modules for faster builds

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run ESLint (Code Linting)
      run: npm run lint

    - name: Run Prettier Check (Code Formatting)
      run: prettier --check .

    - name: Run Playwright Tests on ${{ matrix.browser }}
      run: npx playwright test --project=${{ matrix.browser }}

    - name: Upload Playwright Test Report
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.browser }}-${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 30

    - name: Upload Screenshots and Videos (if tests fail)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-artifacts-${{ matrix.browser }}-${{ matrix.node-version }}
        path: test-results/

  notify:
    name: Notify Team on Failure
    needs: test
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification on Failure
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": ":x: Playwright Tests Failed on ${{ github.repository }} branch ${{ github.ref }}",
              "attachments": [{
                "color": "danger",
                "fields": [
                  { "title": "Workflow", "value": "${{ github.workflow }}", "short": true },
                  { "title": "Run Number", "value": "${{ github.run_number }}", "short": true },
                  { "title": "Commit", "value": "${{ github.sha }}", "short": false }
                ]
              }]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    name: Deploy to Staging (Manual Approval)
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Await manual approval before deploying
        uses: peter-evans/workflow-dispatch@v1
        with:
          workflow: Deploy to Production
          token: ${{ secrets.GITHUB_TOKEN }}

